name: release-electron

on:
  workflow_dispatch:

jobs:
  read-json:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set_version.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      - run: echo "CONTENT=$(jq -c .build < ./${{ github.event.repository.name }}/electron.manifest.json)" >> "$GITHUB_ENV"
      - id: set_version
        run: echo "version=${{ fromJson(env.CONTENT).buildVersion }}" >> "$GITHUB_OUTPUT"

  release:
    runs-on: ${{ matrix.os }}
    needs: read-json
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install ElectronNET.CLI
        run: dotnet tool install ElectronNET.CLI -g
        
      - name: Build win target
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          electronize build /target win /electron-params "-p=never"
          if (-not [System.IO.File]::Exists("./bin/Desktop/${{ github.event.repository.name }} Setup ${{ needs.read-json.outputs.version }}.exe")) {
            echo "::error::The win target assets were not created."; ls ./bin/Desktop/
          }
      - name: Build mac target
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          electronize build /target osx /electron-params "-p=never"
          if [ ! -f ./bin/Desktop/${{ github.event.repository.name }}-${{ needs.read-json.outputs.version }}.dmg ]; then
            echo "::error::The mac target assets were not created."; ls ./bin/Desktop/
          fi
      - name: Build linux target
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          electronize build /target linux /electron-params "-p=never"
          if [ ! -f ./bin/Desktop/${{ github.event.repository.name }}-${{ needs.read-json.outputs.version }}.AppImage ]; then
            echo "::error::The linux target assets were not created."; ls ./bin/Desktop/
          fi
