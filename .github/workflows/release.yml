name: release-electron

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  read-json:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set_version.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      - run: echo "CONTENT=$(jq -c .build < ./${{ github.event.repository.name }}/electron.manifest.json)" >> "$GITHUB_ENV"
      - id: set_version
        run: echo "version=${{ fromJson(env.CONTENT).buildVersion }}" >> "$GITHUB_OUTPUT"
      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: ${{ format('v{0}', steps.set_version.outputs.version) }}
        run: |
          gh release create "${TAG}" \
              --repo="${GITHUB_REPOSITORY}" \
              --title="${TAG}" \
              --generate-notes

  release:
    runs-on: ${{ matrix.os }}
    needs: read-json
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
    env:
      REPO_NAME: ${{ github.event.repository.name }}
      VERSION: ${{ needs.read-json.outputs.version }}
      TAG: ${{ format('v{0}', needs.read-json.outputs.version) }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install ElectronNET.CLI
        run: dotnet tool install ElectronNET.CLI -g
        
      - name: Build win target
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          $file_path="./bin/Desktop/${Env:REPO_NAME} Setup ${Env:VERSION}.exe"
          electronize build /target win /electron-params "-p=never"
          if ([System.IO.File]::Exists($file_path)) {
            gh release upload ${Env:TAG} $file_path
          }
          else {
            echo "::error::The win target assets were not created."; ls ./bin/Desktop/
          }
      - name: Build mac target
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          file_path="./bin/Desktop/${REPO_NAME}-${VERSION}.dmg"
          electronize build /target osx /electron-params "-p=never"
          if [ -f ${file_path} ]; then
            gh release upload ${TAG} $file_path
          else
            echo "::error::The mac target assets were not created."; ls ./bin/Desktop/
          fi
      - name: Build linux target
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          file_path="./bin/Desktop/${REPO_NAME}-${VERSION}.AppImage"
          electronize build /target linux /electron-params "-p=never"
          if [ -f ${file_path} ]; then
            gh release upload ${TAG} $file_path
          else
            echo "::error::The linux target assets were not created."; ls ./bin/Desktop/
          fi
